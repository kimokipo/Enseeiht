Date de l'évaluation : mer. 10 mars 2021 20:02:56 CET

Nombre de similitudes (voir evaluations/penalites1/sim_java.txt) : 4
Les similitudes indiquent généralement du code à restructurer.

Erreurs checkstyle (différentes/types) : 46/11	(voir evaluations/penalites1//checkstyle.log)

Classe OperationInterditeException : OperationInterditException (ok)

Procuration sur le jeu réel : allumettes/Procuration.java (ok)

OperationInterditException, levée dans : allumettes/Procuration.java (ok)
OperationInterditException, récupérée dans : allumettes/Arbitre.java (ok)

Utilisation de 'Scanner' : ok
	allumettes/Strategie.java:	public static final Scanner scanner = new Scanner(System.in);

Utilisation de 'split' : ok mais un seul split devrait suffir !  Code à restructurer...
	allumettes/Jouer.java:			String[] tab1 = args[i].split("@");
	allumettes/Jouer.java:			String[] tab2 = args[i+1].split("@");

Utilisation de 'Random' : ok
	allumettes/Strategie.java:import java.util.Random;
	allumettes/Strategie.java:	public static final Random r = new Random();

Utilisation de '3' : ok

Utilisation de 'System.exit' : ok

Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.
Compilation de RapideTest.java : OK.
Test exemplePresqueSujet : ok
Test exempleTricheurSujet : ok
Test exempleConfiantTricheurSujet : ok
Test exempleRobustesse : ok
Test exempleHumainTricheurExpert : ok
Test exempleLucLea : ok
Test exempleRapideRapide : ok
Test exempleTricheurExpert : ok

On recommence avec les classes/interfaces fournies : Jeu ConfigurationException CoupInvalideException
Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.

Vérification du respect du diagramme de classe...
Test FormeTest : OK (2 tests)	(voir evaluations/penalites1/FormeTest.log)

Compilation de RapideTest.java : OK.
Test allumettes.RapideTest : OK (3 tests)	(voir evaluations/penalites1/allumettes.RapideTest.log)

Total pénalités : 0
