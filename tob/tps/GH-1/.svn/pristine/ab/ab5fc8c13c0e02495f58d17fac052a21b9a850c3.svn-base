import javax.swing.*;
import java.awt.*;
import javax.swing.event.*;
import java.awt.event.*;
import java.util.*;

/** Programmation d’une fiche personnage de  avec une interface graphique Swing.
  *
  *
  * @author    Kamal Hammi
  * @version    $Version: 1.0 $
  */

public class  FichePersonnageSwing {

    
    

// Choix de rÃ©alisation :
// ----------------------
//
//  

    private ModeleFichePersonnage modele;    // le modÃ¨le de la fiche personnage.

//  Les Ã©lÃ©ments de la vue (IHM)
//  ----------------------------

    /** FenÃªtre principale */
    private JFrame fenetre;

    /** Bouton pour Modifier l'image du joueur*/
    private final JButton boutonModifierImage = new JButton("Modifier");

    /** Bouton pour Imprimer la fiche */
    private final JButton boutonImprimerFiche = new JButton("Imprimer fiche");

    

    /** Image du joueur */
    private final JLabel image= new JLabel();


// Le constructeur
// ---------------

   

    /** Construire la fiche personnage */
    public FichePersonnageSwing(ModeleFichePersonnage modele) {
        // Initialiser le modÃ¨le
        this.modele = modele;

        final JLabel nom = new JLabel("Nom");
        final JLabel nomTexte = new JLabel(modele.getNom());
        final JLabel role = new JLabel("Role");
        final JLabel roleTexte = new JLabel(modele.getRole());
    
        final JLabel vie = new JLabel("Vie");
        final JLabel vieValeur = new JLabel(modele.getVie());
        
        final JLabel capacites = new JLabel("Capacités");
        final JLabel inventaire= new JLabel("Inventaire");
        
        

        // Construire la vue (prÃ©sentation)
        //    DÃ©finir la fenÃªtre principale
        this.fenetre = new JFrame("Joueur");
        this.fenetre.setLocation(100, 200);

        Container contenuPrincipale = this.fenetre.getContentPane();
        contenuPrincipale.setLayout (new GridLayout(1,2));

        Container contenu1 = new Container();
        Container contenu2 = new Container();

        contenuPrincipale.add(contenu1);
        contenuPrincipale.add(contenu2);

        contenu1.setLayout (new GridLayout(5,1));    
        contenu2.setLayout (new GridLayout(5,1));

        contenu1.add(image);
        contenu1.add(boutonModifierImage);

        Container contenu11 = new Container();
        Container contenu12 = new Container();

        contenu1.add(contenu11);
        contenu1.add(contenu12);

        contenu11.setLayout (new GridLayout(1,2));
        contenu12.setLayout (new GridLayout(1,2));

        contenu11.add(nom);
        contenu11.add(nomTexte);
        contenu12.add(role);
        contenu12.add(roleTexte);

        contenu1.add(boutonImprimerFiche);

        Container contenuVie = new Container();
        contenuVie .setLayout (new GridLayout(1,2));

        contenuVie.add(vie);
        contenuVie.add(vieValeur);

        contenu2.add(contenuVie);
        contenu2.add(capacites);

        Container contenu21 = new Container();
        JLabel contenu22 = new JLabel(modele.getInventaire());

        contenu2.add(contenu21);
        contenu2.add(inventaire);
        contenu2.add(contenu22);

        contenu21.setLayout (new GridLayout(modele.getCapacites().size(),2));
        for(Map.Entry<String,String> e : modele.getCapacites().entrySet()){
            contenu21.add(new JLabel(e.getKey()));
            contenu21.add(new JLabel(e.getValue()));
        }

        // Construire le contrÃ´leur (gestion des Ã©vÃ©nements)
        this.boutonModifierImage.addActionListener(new ActionModifierImage());
        this.fenetre.dispose();

        // afficher la fenÃªtre
        this.fenetre.pack();            // redimmensionner la fenÃªtre
        this.fenetre.setVisible(true);    // l'afficher
    }

// Quelques rÃ©actions aux interactions de l'utilisateur
// ----------------------------------------------------
    public class ActionModifierImage implements ActionListener {
        public void actionPerformed(ActionEvent evt) {
            modifierImage();
        }
    }

    /** Modifier l’image du joueur. */
    public void modifierImage() {
        // Mettre Ã  jour l’image
    }

    public JFrame getfenetre(){
		return fenetre;
    }


}



