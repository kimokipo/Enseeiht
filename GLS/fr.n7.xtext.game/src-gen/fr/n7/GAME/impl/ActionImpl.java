/**
 * generated by Xtext 2.23.0
 */
package fr.n7.gAME.impl;

import fr.n7.gAME.Action;
import fr.n7.gAME.Connaissance;
import fr.n7.gAME.GAMEPackage;
import fr.n7.gAME.Objet;
import fr.n7.gAME.Qualification;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Action</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.gAME.impl.ActionImpl#getObjetsConsommes <em>Objets Consommes</em>}</li>
 *   <li>{@link fr.n7.gAME.impl.ActionImpl#getObjetsProduits <em>Objets Produits</em>}</li>
 *   <li>{@link fr.n7.gAME.impl.ActionImpl#getConnaissanceProduits <em>Connaissance Produits</em>}</li>
 *   <li>{@link fr.n7.gAME.impl.ActionImpl#getQualification <em>Qualification</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ActionImpl extends MinimalEObjectImpl.Container implements Action
{
  /**
   * The cached value of the '{@link #getObjetsConsommes() <em>Objets Consommes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjetsConsommes()
   * @generated
   * @ordered
   */
  protected EList<Objet> objetsConsommes;

  /**
   * The cached value of the '{@link #getObjetsProduits() <em>Objets Produits</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjetsProduits()
   * @generated
   * @ordered
   */
  protected EList<Objet> objetsProduits;

  /**
   * The cached value of the '{@link #getConnaissanceProduits() <em>Connaissance Produits</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConnaissanceProduits()
   * @generated
   * @ordered
   */
  protected EList<Connaissance> connaissanceProduits;

  /**
   * The cached value of the '{@link #getQualification() <em>Qualification</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQualification()
   * @generated
   * @ordered
   */
  protected EList<Qualification> qualification;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ActionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GAMEPackage.Literals.ACTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Objet> getObjetsConsommes()
  {
    if (objetsConsommes == null)
    {
      objetsConsommes = new EObjectContainmentEList<Objet>(Objet.class, this, GAMEPackage.ACTION__OBJETS_CONSOMMES);
    }
    return objetsConsommes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Objet> getObjetsProduits()
  {
    if (objetsProduits == null)
    {
      objetsProduits = new EObjectContainmentEList<Objet>(Objet.class, this, GAMEPackage.ACTION__OBJETS_PRODUITS);
    }
    return objetsProduits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Connaissance> getConnaissanceProduits()
  {
    if (connaissanceProduits == null)
    {
      connaissanceProduits = new EObjectContainmentEList<Connaissance>(Connaissance.class, this, GAMEPackage.ACTION__CONNAISSANCE_PRODUITS);
    }
    return connaissanceProduits;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Qualification> getQualification()
  {
    if (qualification == null)
    {
      qualification = new EObjectContainmentEList<Qualification>(Qualification.class, this, GAMEPackage.ACTION__QUALIFICATION);
    }
    return qualification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GAMEPackage.ACTION__OBJETS_CONSOMMES:
        return ((InternalEList<?>)getObjetsConsommes()).basicRemove(otherEnd, msgs);
      case GAMEPackage.ACTION__OBJETS_PRODUITS:
        return ((InternalEList<?>)getObjetsProduits()).basicRemove(otherEnd, msgs);
      case GAMEPackage.ACTION__CONNAISSANCE_PRODUITS:
        return ((InternalEList<?>)getConnaissanceProduits()).basicRemove(otherEnd, msgs);
      case GAMEPackage.ACTION__QUALIFICATION:
        return ((InternalEList<?>)getQualification()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GAMEPackage.ACTION__OBJETS_CONSOMMES:
        return getObjetsConsommes();
      case GAMEPackage.ACTION__OBJETS_PRODUITS:
        return getObjetsProduits();
      case GAMEPackage.ACTION__CONNAISSANCE_PRODUITS:
        return getConnaissanceProduits();
      case GAMEPackage.ACTION__QUALIFICATION:
        return getQualification();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GAMEPackage.ACTION__OBJETS_CONSOMMES:
        getObjetsConsommes().clear();
        getObjetsConsommes().addAll((Collection<? extends Objet>)newValue);
        return;
      case GAMEPackage.ACTION__OBJETS_PRODUITS:
        getObjetsProduits().clear();
        getObjetsProduits().addAll((Collection<? extends Objet>)newValue);
        return;
      case GAMEPackage.ACTION__CONNAISSANCE_PRODUITS:
        getConnaissanceProduits().clear();
        getConnaissanceProduits().addAll((Collection<? extends Connaissance>)newValue);
        return;
      case GAMEPackage.ACTION__QUALIFICATION:
        getQualification().clear();
        getQualification().addAll((Collection<? extends Qualification>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.ACTION__OBJETS_CONSOMMES:
        getObjetsConsommes().clear();
        return;
      case GAMEPackage.ACTION__OBJETS_PRODUITS:
        getObjetsProduits().clear();
        return;
      case GAMEPackage.ACTION__CONNAISSANCE_PRODUITS:
        getConnaissanceProduits().clear();
        return;
      case GAMEPackage.ACTION__QUALIFICATION:
        getQualification().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.ACTION__OBJETS_CONSOMMES:
        return objetsConsommes != null && !objetsConsommes.isEmpty();
      case GAMEPackage.ACTION__OBJETS_PRODUITS:
        return objetsProduits != null && !objetsProduits.isEmpty();
      case GAMEPackage.ACTION__CONNAISSANCE_PRODUITS:
        return connaissanceProduits != null && !connaissanceProduits.isEmpty();
      case GAMEPackage.ACTION__QUALIFICATION:
        return qualification != null && !qualification.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ActionImpl
