/**
 * generated by Xtext 2.23.0
 */
package fr.n7.gAME.impl;

import fr.n7.gAME.Chemin;
import fr.n7.gAME.GAMEPackage;
import fr.n7.gAME.Lieu;
import fr.n7.gAME.Territoire;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Territoire</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.gAME.impl.TerritoireImpl#getLieuDepart <em>Lieu Depart</em>}</li>
 *   <li>{@link fr.n7.gAME.impl.TerritoireImpl#getLieux <em>Lieux</em>}</li>
 *   <li>{@link fr.n7.gAME.impl.TerritoireImpl#getLieuxFin <em>Lieux Fin</em>}</li>
 *   <li>{@link fr.n7.gAME.impl.TerritoireImpl#getChemins <em>Chemins</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TerritoireImpl extends MinimalEObjectImpl.Container implements Territoire
{
  /**
   * The cached value of the '{@link #getLieuDepart() <em>Lieu Depart</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLieuDepart()
   * @generated
   * @ordered
   */
  protected Lieu lieuDepart;

  /**
   * The cached value of the '{@link #getLieux() <em>Lieux</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLieux()
   * @generated
   * @ordered
   */
  protected EList<Lieu> lieux;

  /**
   * The cached value of the '{@link #getLieuxFin() <em>Lieux Fin</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLieuxFin()
   * @generated
   * @ordered
   */
  protected EList<Lieu> lieuxFin;

  /**
   * The cached value of the '{@link #getChemins() <em>Chemins</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getChemins()
   * @generated
   * @ordered
   */
  protected EList<Chemin> chemins;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TerritoireImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GAMEPackage.Literals.TERRITOIRE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lieu getLieuDepart()
  {
    return lieuDepart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLieuDepart(Lieu newLieuDepart, NotificationChain msgs)
  {
    Lieu oldLieuDepart = lieuDepart;
    lieuDepart = newLieuDepart;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GAMEPackage.TERRITOIRE__LIEU_DEPART, oldLieuDepart, newLieuDepart);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLieuDepart(Lieu newLieuDepart)
  {
    if (newLieuDepart != lieuDepart)
    {
      NotificationChain msgs = null;
      if (lieuDepart != null)
        msgs = ((InternalEObject)lieuDepart).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.TERRITOIRE__LIEU_DEPART, null, msgs);
      if (newLieuDepart != null)
        msgs = ((InternalEObject)newLieuDepart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GAMEPackage.TERRITOIRE__LIEU_DEPART, null, msgs);
      msgs = basicSetLieuDepart(newLieuDepart, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GAMEPackage.TERRITOIRE__LIEU_DEPART, newLieuDepart, newLieuDepart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Lieu> getLieux()
  {
    if (lieux == null)
    {
      lieux = new EObjectContainmentEList<Lieu>(Lieu.class, this, GAMEPackage.TERRITOIRE__LIEUX);
    }
    return lieux;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Lieu> getLieuxFin()
  {
    if (lieuxFin == null)
    {
      lieuxFin = new EObjectContainmentEList<Lieu>(Lieu.class, this, GAMEPackage.TERRITOIRE__LIEUX_FIN);
    }
    return lieuxFin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Chemin> getChemins()
  {
    if (chemins == null)
    {
      chemins = new EObjectContainmentEList<Chemin>(Chemin.class, this, GAMEPackage.TERRITOIRE__CHEMINS);
    }
    return chemins;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GAMEPackage.TERRITOIRE__LIEU_DEPART:
        return basicSetLieuDepart(null, msgs);
      case GAMEPackage.TERRITOIRE__LIEUX:
        return ((InternalEList<?>)getLieux()).basicRemove(otherEnd, msgs);
      case GAMEPackage.TERRITOIRE__LIEUX_FIN:
        return ((InternalEList<?>)getLieuxFin()).basicRemove(otherEnd, msgs);
      case GAMEPackage.TERRITOIRE__CHEMINS:
        return ((InternalEList<?>)getChemins()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GAMEPackage.TERRITOIRE__LIEU_DEPART:
        return getLieuDepart();
      case GAMEPackage.TERRITOIRE__LIEUX:
        return getLieux();
      case GAMEPackage.TERRITOIRE__LIEUX_FIN:
        return getLieuxFin();
      case GAMEPackage.TERRITOIRE__CHEMINS:
        return getChemins();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GAMEPackage.TERRITOIRE__LIEU_DEPART:
        setLieuDepart((Lieu)newValue);
        return;
      case GAMEPackage.TERRITOIRE__LIEUX:
        getLieux().clear();
        getLieux().addAll((Collection<? extends Lieu>)newValue);
        return;
      case GAMEPackage.TERRITOIRE__LIEUX_FIN:
        getLieuxFin().clear();
        getLieuxFin().addAll((Collection<? extends Lieu>)newValue);
        return;
      case GAMEPackage.TERRITOIRE__CHEMINS:
        getChemins().clear();
        getChemins().addAll((Collection<? extends Chemin>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.TERRITOIRE__LIEU_DEPART:
        setLieuDepart((Lieu)null);
        return;
      case GAMEPackage.TERRITOIRE__LIEUX:
        getLieux().clear();
        return;
      case GAMEPackage.TERRITOIRE__LIEUX_FIN:
        getLieuxFin().clear();
        return;
      case GAMEPackage.TERRITOIRE__CHEMINS:
        getChemins().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GAMEPackage.TERRITOIRE__LIEU_DEPART:
        return lieuDepart != null;
      case GAMEPackage.TERRITOIRE__LIEUX:
        return lieux != null && !lieux.isEmpty();
      case GAMEPackage.TERRITOIRE__LIEUX_FIN:
        return lieuxFin != null && !lieuxFin.isEmpty();
      case GAMEPackage.TERRITOIRE__CHEMINS:
        return chemins != null && !chemins.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //TerritoireImpl
