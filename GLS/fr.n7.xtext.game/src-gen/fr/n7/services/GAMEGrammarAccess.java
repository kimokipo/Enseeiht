/*
 * generated by Xtext 2.23.0
 */
package fr.n7.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GAMEGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class GameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Game");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExplorateurAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExplorateurExplorateurParserRuleCall_3_0 = (RuleCall)cExplorateurAssignment_3.eContents().get(0);
		private final Assignment cTerritoireAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTerritoireTerritoireParserRuleCall_4_0 = (RuleCall)cTerritoireAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		///* Exigence 40 */ /* Exigence 41 */ /* Exigence 42 */ /* Exigence 43 */ Game:
		//	'game' name=ID '{'
		//	explorateur=Explorateur /* Exigence 1 */
		//	territoire=Territoire
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'game' name=ID '{' explorateur=Explorateur /* Exigence 1 */ territoire=Territoire '}'
		public Group getGroup() { return cGroup; }
		
		//'game'
		public Keyword getGameKeyword_0() { return cGameKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//explorateur=Explorateur
		public Assignment getExplorateurAssignment_3() { return cExplorateurAssignment_3; }
		
		//Explorateur
		public RuleCall getExplorateurExplorateurParserRuleCall_3_0() { return cExplorateurExplorateurParserRuleCall_3_0; }
		
		///* Exigence 1 */ territoire=Territoire
		public Assignment getTerritoireAssignment_4() { return cTerritoireAssignment_4; }
		
		//Territoire
		public RuleCall getTerritoireTerritoireParserRuleCall_4_0() { return cTerritoireTerritoireParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ExplorateurElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Explorateur");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExplorateurKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cObjetsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cObjetsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cObjetsObjetParserRuleCall_4_0 = (RuleCall)cObjetsAssignment_4.eContents().get(0);
		private final Keyword cConnaisancesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cConnaissancesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConnaissancesConnaissanceParserRuleCall_6_0 = (RuleCall)cConnaissancesAssignment_6.eContents().get(0);
		private final Keyword cLieuCourantKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cLieuCourantAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cLieuCourantLieuCrossReference_8_0 = (CrossReference)cLieuCourantAssignment_8.eContents().get(0);
		private final RuleCall cLieuCourantLieuIDTerminalRuleCall_8_0_1 = (RuleCall)cLieuCourantLieuCrossReference_8_0.eContents().get(1);
		private final Keyword cLieuxExploresKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cLieuExploresAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cLieuExploresLieuCrossReference_10_0 = (CrossReference)cLieuExploresAssignment_10.eContents().get(0);
		private final RuleCall cLieuExploresLieuIDTerminalRuleCall_10_0_1 = (RuleCall)cLieuExploresLieuCrossReference_10_0.eContents().get(1);
		private final Keyword cLimiteTailleKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cLimiteAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cLimiteEIntParserRuleCall_12_0 = (RuleCall)cLimiteAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Explorateur:
		//	'explorateur' name=ID '{'
		//	'objets' objets+=Objet* /* Exigence 3 */ /* Exigence 13 OCL */ /* Exigence 14 OCL */ /* Exigence 15 OCL */
		//	'connaisances' connaissances+=Connaissance* /* Exigence 3 */
		//	'lieuCourant' lieuCourant=[Lieu] /* Exigence 12 OCL */ /* Exigence 18 OCL */
		//	'lieuxExplores' lieuExplores+=[Lieu]*
		//	'limiteTaille' limite=EInt /* Exigence 6 */ /* OCL */
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'explorateur' name=ID '{' 'objets' objets+=Objet* /* Exigence 3 */ /* Exigence 13 OCL */ /* Exigence 14 OCL */
		///* Exigence 15 OCL */ 'connaisances' connaissances+=Connaissance* /* Exigence 3 */ 'lieuCourant' lieuCourant=[Lieu]
		///* Exigence 12 OCL */ /* Exigence 18 OCL */ 'lieuxExplores' lieuExplores+=[Lieu]* 'limiteTaille' limite=EInt
		///* Exigence 6 */ /* OCL */ '}'
		public Group getGroup() { return cGroup; }
		
		//'explorateur'
		public Keyword getExplorateurKeyword_0() { return cExplorateurKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'objets'
		public Keyword getObjetsKeyword_3() { return cObjetsKeyword_3; }
		
		//objets+=Objet*
		public Assignment getObjetsAssignment_4() { return cObjetsAssignment_4; }
		
		//Objet
		public RuleCall getObjetsObjetParserRuleCall_4_0() { return cObjetsObjetParserRuleCall_4_0; }
		
		///* Exigence 3 */ /* Exigence 13 OCL */ /* Exigence 14 OCL */ /* Exigence 15 OCL */ 'connaisances'
		public Keyword getConnaisancesKeyword_5() { return cConnaisancesKeyword_5; }
		
		//connaissances+=Connaissance*
		public Assignment getConnaissancesAssignment_6() { return cConnaissancesAssignment_6; }
		
		//Connaissance
		public RuleCall getConnaissancesConnaissanceParserRuleCall_6_0() { return cConnaissancesConnaissanceParserRuleCall_6_0; }
		
		///* Exigence 3 */ 'lieuCourant'
		public Keyword getLieuCourantKeyword_7() { return cLieuCourantKeyword_7; }
		
		//lieuCourant=[Lieu]
		public Assignment getLieuCourantAssignment_8() { return cLieuCourantAssignment_8; }
		
		//[Lieu]
		public CrossReference getLieuCourantLieuCrossReference_8_0() { return cLieuCourantLieuCrossReference_8_0; }
		
		//ID
		public RuleCall getLieuCourantLieuIDTerminalRuleCall_8_0_1() { return cLieuCourantLieuIDTerminalRuleCall_8_0_1; }
		
		///* Exigence 12 OCL */ /* Exigence 18 OCL */ 'lieuxExplores'
		public Keyword getLieuxExploresKeyword_9() { return cLieuxExploresKeyword_9; }
		
		//lieuExplores+=[Lieu]*
		public Assignment getLieuExploresAssignment_10() { return cLieuExploresAssignment_10; }
		
		//[Lieu]
		public CrossReference getLieuExploresLieuCrossReference_10_0() { return cLieuExploresLieuCrossReference_10_0; }
		
		//ID
		public RuleCall getLieuExploresLieuIDTerminalRuleCall_10_0_1() { return cLieuExploresLieuIDTerminalRuleCall_10_0_1; }
		
		//'limiteTaille'
		public Keyword getLimiteTailleKeyword_11() { return cLimiteTailleKeyword_11; }
		
		//limite=EInt
		public Assignment getLimiteAssignment_12() { return cLimiteAssignment_12; }
		
		//EInt
		public RuleCall getLimiteEIntParserRuleCall_12_0() { return cLimiteEIntParserRuleCall_12_0; }
		
		///* Exigence 6 */ /* OCL */ '}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class ObjetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Objet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObjetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cInitValKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInitValAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInitValEIntParserRuleCall_3_0 = (RuleCall)cInitValAssignment_3.eContents().get(0);
		private final Keyword cTailleKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTailleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTailleEIntParserRuleCall_5_0 = (RuleCall)cTailleAssignment_5.eContents().get(0);
		private final Keyword cEtatKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cEtatAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cEtatEtatVisibiliteEnumRuleCall_7_0 = (RuleCall)cEtatAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cObtentionKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cConditionAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cConditionConditionParserRuleCall_8_1_0 = (RuleCall)cConditionAssignment_8_1.eContents().get(0);
		private final Assignment cQualificationAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cQualificationQualificationParserRuleCall_9_0 = (RuleCall)cQualificationAssignment_9.eContents().get(0);
		
		//Objet:
		//	'objet' name=ID
		//	'initVal' initVal=EInt
		//	'taille' taille=EInt /* Exigence 3 */
		//	'etat' etat=EtatVisibilite ('obtention' condition=Condition)? /* Exigence 22 */
		//	qualification+=Qualification* /* Exigence 39 */;
		@Override public ParserRule getRule() { return rule; }
		
		//'objet' name=ID 'initVal' initVal=EInt 'taille' taille=EInt /* Exigence 3 */ 'etat' etat=EtatVisibilite ('obtention'
		//condition=Condition)? /* Exigence 22 */ qualification+=Qualification*
		public Group getGroup() { return cGroup; }
		
		//'objet'
		public Keyword getObjetKeyword_0() { return cObjetKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'initVal'
		public Keyword getInitValKeyword_2() { return cInitValKeyword_2; }
		
		//initVal=EInt
		public Assignment getInitValAssignment_3() { return cInitValAssignment_3; }
		
		//EInt
		public RuleCall getInitValEIntParserRuleCall_3_0() { return cInitValEIntParserRuleCall_3_0; }
		
		//'taille'
		public Keyword getTailleKeyword_4() { return cTailleKeyword_4; }
		
		//taille=EInt
		public Assignment getTailleAssignment_5() { return cTailleAssignment_5; }
		
		//EInt
		public RuleCall getTailleEIntParserRuleCall_5_0() { return cTailleEIntParserRuleCall_5_0; }
		
		///* Exigence 3 */ 'etat'
		public Keyword getEtatKeyword_6() { return cEtatKeyword_6; }
		
		//etat=EtatVisibilite
		public Assignment getEtatAssignment_7() { return cEtatAssignment_7; }
		
		//EtatVisibilite
		public RuleCall getEtatEtatVisibiliteEnumRuleCall_7_0() { return cEtatEtatVisibiliteEnumRuleCall_7_0; }
		
		//('obtention' condition=Condition)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'obtention'
		public Keyword getObtentionKeyword_8_0() { return cObtentionKeyword_8_0; }
		
		//condition=Condition
		public Assignment getConditionAssignment_8_1() { return cConditionAssignment_8_1; }
		
		//Condition
		public RuleCall getConditionConditionParserRuleCall_8_1_0() { return cConditionConditionParserRuleCall_8_1_0; }
		
		///* Exigence 22 */ qualification+=Qualification*
		public Assignment getQualificationAssignment_9() { return cQualificationAssignment_9; }
		
		//Qualification
		public RuleCall getQualificationQualificationParserRuleCall_9_0() { return cQualificationQualificationParserRuleCall_9_0; }
	}
	public class ConnaissanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Connaissance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConnaissanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cQualificationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cQualificationQualificationParserRuleCall_3_0 = (RuleCall)cQualificationAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cObtentionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cConditionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cConditionConditionParserRuleCall_4_1_0 = (RuleCall)cConditionAssignment_4_1.eContents().get(0);
		private final Keyword cEtatKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cEtatAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cEtatEtatVisibiliteEnumRuleCall_6_0 = (RuleCall)cEtatAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Connaissance:
		//	'connaissance' name=ID '{'
		//	qualification+=Qualification* ('obtention' condition=Condition)? /* Exigence 22 */
		//	'etat' etat=EtatVisibilite /* Exigence 9 */
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'connaissance' name=ID '{' qualification+=Qualification* ('obtention' condition=Condition)? /* Exigence 22 */ 'etat'
		//etat=EtatVisibilite /* Exigence 9 */ '}'
		public Group getGroup() { return cGroup; }
		
		//'connaissance'
		public Keyword getConnaissanceKeyword_0() { return cConnaissanceKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//qualification+=Qualification*
		public Assignment getQualificationAssignment_3() { return cQualificationAssignment_3; }
		
		//Qualification
		public RuleCall getQualificationQualificationParserRuleCall_3_0() { return cQualificationQualificationParserRuleCall_3_0; }
		
		//('obtention' condition=Condition)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'obtention'
		public Keyword getObtentionKeyword_4_0() { return cObtentionKeyword_4_0; }
		
		//condition=Condition
		public Assignment getConditionAssignment_4_1() { return cConditionAssignment_4_1; }
		
		//Condition
		public RuleCall getConditionConditionParserRuleCall_4_1_0() { return cConditionConditionParserRuleCall_4_1_0; }
		
		///* Exigence 22 */ 'etat'
		public Keyword getEtatKeyword_5() { return cEtatKeyword_5; }
		
		//etat=EtatVisibilite
		public Assignment getEtatAssignment_6() { return cEtatAssignment_6; }
		
		//EtatVisibilite
		public RuleCall getEtatEtatVisibiliteEnumRuleCall_6_0() { return cEtatEtatVisibiliteEnumRuleCall_6_0; }
		
		///* Exigence 9 */ '}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class LieuElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Lieu");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLieuKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPersonnesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cPersonnesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPersonnesPersonneParserRuleCall_4_0 = (RuleCall)cPersonnesAssignment_4.eContents().get(0);
		private final Keyword cObjetsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cObjetsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cObjetsObjetParserRuleCall_6_0 = (RuleCall)cObjetsAssignment_6.eContents().get(0);
		private final Keyword cConnaissancesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cConnaisancesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cConnaisancesConnaissanceParserRuleCall_8_0 = (RuleCall)cConnaisancesAssignment_8.eContents().get(0);
		private final Keyword cCheminsKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cCheminAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCheminCheminParserRuleCall_10_0 = (RuleCall)cCheminAssignment_10.eContents().get(0);
		private final Assignment cQualificationAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cQualificationQualificationParserRuleCall_11_0 = (RuleCall)cQualificationAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Lieu: /* Exigence 7 */ /* Exigence 9 */ 'lieu' name=ID '{' 'personnes' personnes+=Personne* /* Exigence 24 OCL */
		//	'objets' objets+=Objet* 'connaissances' connaisances+=Connaissance* 'chemins' chemin+=Chemin* /* Exigence 16 */
		//	/* Exigence 17 OCL */ /* Exigence 19 OCL */ qualification+=Qualification* /* Exigence 39 */ '}';
		@Override public ParserRule getRule() { return rule; }
		
		///* Exigence 7 */ /* Exigence 9 */ 'lieu' name=ID '{' 'personnes' personnes+=Personne* /* Exigence 24 OCL */ 'objets'
		//objets+=Objet* 'connaissances' connaisances+=Connaissance* 'chemins' chemin+=Chemin* /* Exigence 16 */
		///* Exigence 17 OCL */ /* Exigence 19 OCL */ qualification+=Qualification* /* Exigence 39 */ '}'
		public Group getGroup() { return cGroup; }
		
		///* Exigence 7 */ /* Exigence 9 */ 'lieu'
		public Keyword getLieuKeyword_0() { return cLieuKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'personnes'
		public Keyword getPersonnesKeyword_3() { return cPersonnesKeyword_3; }
		
		//personnes+=Personne*
		public Assignment getPersonnesAssignment_4() { return cPersonnesAssignment_4; }
		
		//Personne
		public RuleCall getPersonnesPersonneParserRuleCall_4_0() { return cPersonnesPersonneParserRuleCall_4_0; }
		
		///* Exigence 24 OCL */ 'objets'
		public Keyword getObjetsKeyword_5() { return cObjetsKeyword_5; }
		
		//objets+=Objet*
		public Assignment getObjetsAssignment_6() { return cObjetsAssignment_6; }
		
		//Objet
		public RuleCall getObjetsObjetParserRuleCall_6_0() { return cObjetsObjetParserRuleCall_6_0; }
		
		//'connaissances'
		public Keyword getConnaissancesKeyword_7() { return cConnaissancesKeyword_7; }
		
		//connaisances+=Connaissance*
		public Assignment getConnaisancesAssignment_8() { return cConnaisancesAssignment_8; }
		
		//Connaissance
		public RuleCall getConnaisancesConnaissanceParserRuleCall_8_0() { return cConnaisancesConnaissanceParserRuleCall_8_0; }
		
		//'chemins'
		public Keyword getCheminsKeyword_9() { return cCheminsKeyword_9; }
		
		//chemin+=Chemin*
		public Assignment getCheminAssignment_10() { return cCheminAssignment_10; }
		
		//Chemin
		public RuleCall getCheminCheminParserRuleCall_10_0() { return cCheminCheminParserRuleCall_10_0; }
		
		///* Exigence 16 */ /* Exigence 17 OCL */ /* Exigence 19 OCL */ qualification+=Qualification*
		public Assignment getQualificationAssignment_11() { return cQualificationAssignment_11; }
		
		//Qualification
		public RuleCall getQualificationQualificationParserRuleCall_11_0() { return cQualificationQualificationParserRuleCall_11_0; }
		
		///* Exigence 39 */ '}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class TerritoireElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Territoire");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTerritoireKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDepartKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLieuDepartAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLieuDepartLieuParserRuleCall_3_0 = (RuleCall)cLieuDepartAssignment_3.eContents().get(0);
		private final Keyword cInterKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLieuxAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLieuxLieuParserRuleCall_5_0 = (RuleCall)cLieuxAssignment_5.eContents().get(0);
		private final Keyword cFinsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cLieuxFinAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cLieuxFinLieuParserRuleCall_7_0 = (RuleCall)cLieuxFinAssignment_7.eContents().get(0);
		private final Keyword cCheminsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cCheminsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cCheminsCheminParserRuleCall_9_0 = (RuleCall)cCheminsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Territoire:
		//	'territoire' '{'
		//	'depart' lieuDepart=Lieu /* Exigence 8 */
		//	'inter' lieux+=Lieu*
		//	'fins' lieuxFin+=Lieu* /* Exigence 8 */
		//	'chemins' chemins+=Chemin*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'territoire' '{' 'depart' lieuDepart=Lieu /* Exigence 8 */ 'inter' lieux+=Lieu* 'fins' lieuxFin+=Lieu* /* Exigence 8 */
		//'chemins' chemins+=Chemin* '}'
		public Group getGroup() { return cGroup; }
		
		//'territoire'
		public Keyword getTerritoireKeyword_0() { return cTerritoireKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'depart'
		public Keyword getDepartKeyword_2() { return cDepartKeyword_2; }
		
		//lieuDepart=Lieu
		public Assignment getLieuDepartAssignment_3() { return cLieuDepartAssignment_3; }
		
		//Lieu
		public RuleCall getLieuDepartLieuParserRuleCall_3_0() { return cLieuDepartLieuParserRuleCall_3_0; }
		
		///* Exigence 8 */ 'inter'
		public Keyword getInterKeyword_4() { return cInterKeyword_4; }
		
		//lieux+=Lieu*
		public Assignment getLieuxAssignment_5() { return cLieuxAssignment_5; }
		
		//Lieu
		public RuleCall getLieuxLieuParserRuleCall_5_0() { return cLieuxLieuParserRuleCall_5_0; }
		
		//'fins'
		public Keyword getFinsKeyword_6() { return cFinsKeyword_6; }
		
		//lieuxFin+=Lieu*
		public Assignment getLieuxFinAssignment_7() { return cLieuxFinAssignment_7; }
		
		//Lieu
		public RuleCall getLieuxFinLieuParserRuleCall_7_0() { return cLieuxFinLieuParserRuleCall_7_0; }
		
		///* Exigence 8 */ 'chemins'
		public Keyword getCheminsKeyword_8() { return cCheminsKeyword_8; }
		
		//chemins+=Chemin*
		public Assignment getCheminsAssignment_9() { return cCheminsAssignment_9; }
		
		//Chemin
		public RuleCall getCheminsCheminParserRuleCall_9_0() { return cCheminsCheminParserRuleCall_9_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Condition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConditionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValEBooleanParserRuleCall_1_0 = (RuleCall)cValAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cObjetsTrueKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cObjetsTrueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cObjetsTrueObjetCrossReference_4_0 = (CrossReference)cObjetsTrueAssignment_4.eContents().get(0);
		private final RuleCall cObjetsTrueObjetIDTerminalRuleCall_4_0_1 = (RuleCall)cObjetsTrueObjetCrossReference_4_0.eContents().get(1);
		private final Keyword cObjetsFalseKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cObjetsFalseAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cObjetsFalseObjetCrossReference_6_0 = (CrossReference)cObjetsFalseAssignment_6.eContents().get(0);
		private final RuleCall cObjetsFalseObjetIDTerminalRuleCall_6_0_1 = (RuleCall)cObjetsFalseObjetCrossReference_6_0.eContents().get(1);
		private final Keyword cConnaissanceTrueKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cConnaissanceTrueAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cConnaissanceTrueConnaissanceCrossReference_8_0 = (CrossReference)cConnaissanceTrueAssignment_8.eContents().get(0);
		private final RuleCall cConnaissanceTrueConnaissanceIDTerminalRuleCall_8_0_1 = (RuleCall)cConnaissanceTrueConnaissanceCrossReference_8_0.eContents().get(1);
		private final Keyword cConnaissanceFalseKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConnaissanceFalseAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cConnaissanceFalseConnaissanceCrossReference_10_0 = (CrossReference)cConnaissanceFalseAssignment_10.eContents().get(0);
		private final RuleCall cConnaissanceFalseConnaissanceIDTerminalRuleCall_10_0_1 = (RuleCall)cConnaissanceFalseConnaissanceCrossReference_10_0.eContents().get(1);
		private final Keyword cLieuExploresKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cLieuxExploresAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final CrossReference cLieuxExploresLieuCrossReference_12_0 = (CrossReference)cLieuxExploresAssignment_12.eContents().get(0);
		private final RuleCall cLieuxExploresLieuIDTerminalRuleCall_12_0_1 = (RuleCall)cLieuxExploresLieuCrossReference_12_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Condition:
		//	'condition' val=EBoolean '{'
		//	'objetsTrue' objetsTrue+=[Objet]*
		//	'objetsFalse' objetsFalse+=[Objet]*
		//	'connaissanceTrue' connaissanceTrue+=[Connaissance]*
		//	'connaissanceFalse' connaissanceFalse+=[Connaissance]*
		//	'lieuExplores' lieuxExplores+=[Lieu]*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'condition' val=EBoolean '{' 'objetsTrue' objetsTrue+=[Objet]* 'objetsFalse' objetsFalse+=[Objet]* 'connaissanceTrue'
		//connaissanceTrue+=[Connaissance]* 'connaissanceFalse' connaissanceFalse+=[Connaissance]* 'lieuExplores'
		//lieuxExplores+=[Lieu]* '}'
		public Group getGroup() { return cGroup; }
		
		//'condition'
		public Keyword getConditionKeyword_0() { return cConditionKeyword_0; }
		
		//val=EBoolean
		public Assignment getValAssignment_1() { return cValAssignment_1; }
		
		//EBoolean
		public RuleCall getValEBooleanParserRuleCall_1_0() { return cValEBooleanParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'objetsTrue'
		public Keyword getObjetsTrueKeyword_3() { return cObjetsTrueKeyword_3; }
		
		//objetsTrue+=[Objet]*
		public Assignment getObjetsTrueAssignment_4() { return cObjetsTrueAssignment_4; }
		
		//[Objet]
		public CrossReference getObjetsTrueObjetCrossReference_4_0() { return cObjetsTrueObjetCrossReference_4_0; }
		
		//ID
		public RuleCall getObjetsTrueObjetIDTerminalRuleCall_4_0_1() { return cObjetsTrueObjetIDTerminalRuleCall_4_0_1; }
		
		//'objetsFalse'
		public Keyword getObjetsFalseKeyword_5() { return cObjetsFalseKeyword_5; }
		
		//objetsFalse+=[Objet]*
		public Assignment getObjetsFalseAssignment_6() { return cObjetsFalseAssignment_6; }
		
		//[Objet]
		public CrossReference getObjetsFalseObjetCrossReference_6_0() { return cObjetsFalseObjetCrossReference_6_0; }
		
		//ID
		public RuleCall getObjetsFalseObjetIDTerminalRuleCall_6_0_1() { return cObjetsFalseObjetIDTerminalRuleCall_6_0_1; }
		
		//'connaissanceTrue'
		public Keyword getConnaissanceTrueKeyword_7() { return cConnaissanceTrueKeyword_7; }
		
		//connaissanceTrue+=[Connaissance]*
		public Assignment getConnaissanceTrueAssignment_8() { return cConnaissanceTrueAssignment_8; }
		
		//[Connaissance]
		public CrossReference getConnaissanceTrueConnaissanceCrossReference_8_0() { return cConnaissanceTrueConnaissanceCrossReference_8_0; }
		
		//ID
		public RuleCall getConnaissanceTrueConnaissanceIDTerminalRuleCall_8_0_1() { return cConnaissanceTrueConnaissanceIDTerminalRuleCall_8_0_1; }
		
		//'connaissanceFalse'
		public Keyword getConnaissanceFalseKeyword_9() { return cConnaissanceFalseKeyword_9; }
		
		//connaissanceFalse+=[Connaissance]*
		public Assignment getConnaissanceFalseAssignment_10() { return cConnaissanceFalseAssignment_10; }
		
		//[Connaissance]
		public CrossReference getConnaissanceFalseConnaissanceCrossReference_10_0() { return cConnaissanceFalseConnaissanceCrossReference_10_0; }
		
		//ID
		public RuleCall getConnaissanceFalseConnaissanceIDTerminalRuleCall_10_0_1() { return cConnaissanceFalseConnaissanceIDTerminalRuleCall_10_0_1; }
		
		//'lieuExplores'
		public Keyword getLieuExploresKeyword_11() { return cLieuExploresKeyword_11; }
		
		//lieuxExplores+=[Lieu]*
		public Assignment getLieuxExploresAssignment_12() { return cLieuxExploresAssignment_12; }
		
		//[Lieu]
		public CrossReference getLieuxExploresLieuCrossReference_12_0() { return cLieuxExploresLieuCrossReference_12_0; }
		
		//ID
		public RuleCall getLieuxExploresLieuIDTerminalRuleCall_12_0_1() { return cLieuxExploresLieuIDTerminalRuleCall_12_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class CheminElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Chemin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEtatCheminKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEtatAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEtatEtatCheminEnumRuleCall_1_0 = (RuleCall)cEtatAssignment_1.eContents().get(0);
		private final Keyword cDeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPredecessorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cPredecessorLieuCrossReference_3_0 = (CrossReference)cPredecessorAssignment_3.eContents().get(0);
		private final RuleCall cPredecessorLieuIDTerminalRuleCall_3_0_1 = (RuleCall)cPredecessorLieuCrossReference_3_0.eContents().get(1);
		private final Keyword cAKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSuccessorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cSuccessorLieuCrossReference_5_0 = (CrossReference)cSuccessorAssignment_5.eContents().get(0);
		private final RuleCall cSuccessorLieuIDTerminalRuleCall_5_0_1 = (RuleCall)cSuccessorLieuCrossReference_5_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cVisibleKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cConditionsVisibleAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cConditionsVisibleConditionParserRuleCall_8_0 = (RuleCall)cConditionsVisibleAssignment_8.eContents().get(0);
		private final Keyword cOuvertureKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cConditionsOuvertureAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConditionsOuvertureConditionParserRuleCall_10_0 = (RuleCall)cConditionsOuvertureAssignment_10.eContents().get(0);
		private final Keyword cObligationKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cConditionsObligationAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cConditionsObligationConditionParserRuleCall_12_0 = (RuleCall)cConditionsObligationAssignment_12.eContents().get(0);
		private final Keyword cObjetsTransmisKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cObjetsTransmisAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cObjetsTransmisObjetParserRuleCall_14_0 = (RuleCall)cObjetsTransmisAssignment_14.eContents().get(0);
		private final Keyword cPrixObjetsKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cPrixObjetsAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cPrixObjetsObjetParserRuleCall_16_0 = (RuleCall)cPrixObjetsAssignment_16.eContents().get(0);
		private final Assignment cQualificationAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cQualificationQualificationParserRuleCall_17_0 = (RuleCall)cQualificationAssignment_17.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		
		//Chemin:
		//	'etatChemin' etat=EtatChemin 'de' predecessor=[Lieu] 'a' successor=[Lieu] '{'
		//	'visible' conditionsVisible=Condition /* Exigence 11 */
		//	'ouverture' conditionsOuverture=Condition /* Exigence 10*/
		//	'obligation' conditionsObligation=Condition
		//	'objetsTransmis' objetsTransmis+=Objet* /* Exigence 20 */
		//	'prixObjets' prixObjets+=Objet* /* Exigence 21 */
		//	qualification+=Qualification* /* Exigence 39 */
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'etatChemin' etat=EtatChemin 'de' predecessor=[Lieu] 'a' successor=[Lieu] '{' 'visible' conditionsVisible=Condition
		///* Exigence 11 */ 'ouverture' conditionsOuverture=Condition /* Exigence 10*/ 'obligation'
		//conditionsObligation=Condition 'objetsTransmis' objetsTransmis+=Objet* /* Exigence 20 */ 'prixObjets'
		//prixObjets+=Objet* /* Exigence 21 */ qualification+=Qualification* /* Exigence 39 */ '}'
		public Group getGroup() { return cGroup; }
		
		//'etatChemin'
		public Keyword getEtatCheminKeyword_0() { return cEtatCheminKeyword_0; }
		
		//etat=EtatChemin
		public Assignment getEtatAssignment_1() { return cEtatAssignment_1; }
		
		//EtatChemin
		public RuleCall getEtatEtatCheminEnumRuleCall_1_0() { return cEtatEtatCheminEnumRuleCall_1_0; }
		
		//'de'
		public Keyword getDeKeyword_2() { return cDeKeyword_2; }
		
		//predecessor=[Lieu]
		public Assignment getPredecessorAssignment_3() { return cPredecessorAssignment_3; }
		
		//[Lieu]
		public CrossReference getPredecessorLieuCrossReference_3_0() { return cPredecessorLieuCrossReference_3_0; }
		
		//ID
		public RuleCall getPredecessorLieuIDTerminalRuleCall_3_0_1() { return cPredecessorLieuIDTerminalRuleCall_3_0_1; }
		
		//'a'
		public Keyword getAKeyword_4() { return cAKeyword_4; }
		
		//successor=[Lieu]
		public Assignment getSuccessorAssignment_5() { return cSuccessorAssignment_5; }
		
		//[Lieu]
		public CrossReference getSuccessorLieuCrossReference_5_0() { return cSuccessorLieuCrossReference_5_0; }
		
		//ID
		public RuleCall getSuccessorLieuIDTerminalRuleCall_5_0_1() { return cSuccessorLieuIDTerminalRuleCall_5_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }
		
		//'visible'
		public Keyword getVisibleKeyword_7() { return cVisibleKeyword_7; }
		
		//conditionsVisible=Condition
		public Assignment getConditionsVisibleAssignment_8() { return cConditionsVisibleAssignment_8; }
		
		//Condition
		public RuleCall getConditionsVisibleConditionParserRuleCall_8_0() { return cConditionsVisibleConditionParserRuleCall_8_0; }
		
		///* Exigence 11 */ 'ouverture'
		public Keyword getOuvertureKeyword_9() { return cOuvertureKeyword_9; }
		
		//conditionsOuverture=Condition
		public Assignment getConditionsOuvertureAssignment_10() { return cConditionsOuvertureAssignment_10; }
		
		//Condition
		public RuleCall getConditionsOuvertureConditionParserRuleCall_10_0() { return cConditionsOuvertureConditionParserRuleCall_10_0; }
		
		///* Exigence 10*/ 'obligation'
		public Keyword getObligationKeyword_11() { return cObligationKeyword_11; }
		
		//conditionsObligation=Condition
		public Assignment getConditionsObligationAssignment_12() { return cConditionsObligationAssignment_12; }
		
		//Condition
		public RuleCall getConditionsObligationConditionParserRuleCall_12_0() { return cConditionsObligationConditionParserRuleCall_12_0; }
		
		//'objetsTransmis'
		public Keyword getObjetsTransmisKeyword_13() { return cObjetsTransmisKeyword_13; }
		
		//objetsTransmis+=Objet*
		public Assignment getObjetsTransmisAssignment_14() { return cObjetsTransmisAssignment_14; }
		
		//Objet
		public RuleCall getObjetsTransmisObjetParserRuleCall_14_0() { return cObjetsTransmisObjetParserRuleCall_14_0; }
		
		///* Exigence 20 */ 'prixObjets'
		public Keyword getPrixObjetsKeyword_15() { return cPrixObjetsKeyword_15; }
		
		//prixObjets+=Objet*
		public Assignment getPrixObjetsAssignment_16() { return cPrixObjetsAssignment_16; }
		
		//Objet
		public RuleCall getPrixObjetsObjetParserRuleCall_16_0() { return cPrixObjetsObjetParserRuleCall_16_0; }
		
		///* Exigence 21 */ qualification+=Qualification*
		public Assignment getQualificationAssignment_17() { return cQualificationAssignment_17; }
		
		//Qualification
		public RuleCall getQualificationQualificationParserRuleCall_17_0() { return cQualificationQualificationParserRuleCall_17_0; }
		
		///* Exigence 39 */ '}'
		public Keyword getRightCurlyBracketKeyword_18() { return cRightCurlyBracketKeyword_18; }
	}
	public class PersonneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Personne");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPersonneKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cActiviteKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cActiviteAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cActiviteEtatActiviteEnumRuleCall_4_0 = (RuleCall)cActiviteAssignment_4.eContents().get(0);
		private final Keyword cVisibiliteKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cConditionsVisibleAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConditionsVisibleConditionParserRuleCall_6_0 = (RuleCall)cConditionsVisibleAssignment_6.eContents().get(0);
		private final Keyword cObligationKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cConditionsObligationAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cConditionsObligationConditionParserRuleCall_8_0 = (RuleCall)cConditionsObligationAssignment_8.eContents().get(0);
		private final Keyword cInteractionKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cInteractionAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cInteractionInteractionParserRuleCall_10_0 = (RuleCall)cInteractionAssignment_10.eContents().get(0);
		private final Assignment cQualificationAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cQualificationQualificationParserRuleCall_11_0 = (RuleCall)cQualificationAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Personne:
		//	'personne' name=EString '{'
		//	'activite' activite=EtatActivite /* Exigence 9 */
		//	'visibilite' conditionsVisible=Condition /* Exigence 11 */
		//	'obligation' conditionsObligation=Condition /* Exigence 25 */ /* Exigence 26 OCL */
		//	'interaction' interaction=Interaction /* Exigence 27 OCL */
		//	qualification+=Qualification*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'personne' name=EString '{' 'activite' activite=EtatActivite /* Exigence 9 */ 'visibilite' conditionsVisible=Condition
		///* Exigence 11 */ 'obligation' conditionsObligation=Condition /* Exigence 25 */ /* Exigence 26 OCL */ 'interaction'
		//interaction=Interaction /* Exigence 27 OCL */ qualification+=Qualification* '}'
		public Group getGroup() { return cGroup; }
		
		//'personne'
		public Keyword getPersonneKeyword_0() { return cPersonneKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'activite'
		public Keyword getActiviteKeyword_3() { return cActiviteKeyword_3; }
		
		//activite=EtatActivite
		public Assignment getActiviteAssignment_4() { return cActiviteAssignment_4; }
		
		//EtatActivite
		public RuleCall getActiviteEtatActiviteEnumRuleCall_4_0() { return cActiviteEtatActiviteEnumRuleCall_4_0; }
		
		///* Exigence 9 */ 'visibilite'
		public Keyword getVisibiliteKeyword_5() { return cVisibiliteKeyword_5; }
		
		//conditionsVisible=Condition
		public Assignment getConditionsVisibleAssignment_6() { return cConditionsVisibleAssignment_6; }
		
		//Condition
		public RuleCall getConditionsVisibleConditionParserRuleCall_6_0() { return cConditionsVisibleConditionParserRuleCall_6_0; }
		
		///* Exigence 11 */ 'obligation'
		public Keyword getObligationKeyword_7() { return cObligationKeyword_7; }
		
		//conditionsObligation=Condition
		public Assignment getConditionsObligationAssignment_8() { return cConditionsObligationAssignment_8; }
		
		//Condition
		public RuleCall getConditionsObligationConditionParserRuleCall_8_0() { return cConditionsObligationConditionParserRuleCall_8_0; }
		
		///* Exigence 25 */ /* Exigence 26 OCL */ 'interaction'
		public Keyword getInteractionKeyword_9() { return cInteractionKeyword_9; }
		
		//interaction=Interaction
		public Assignment getInteractionAssignment_10() { return cInteractionAssignment_10; }
		
		//Interaction
		public RuleCall getInteractionInteractionParserRuleCall_10_0() { return cInteractionInteractionParserRuleCall_10_0; }
		
		///* Exigence 27 OCL */ qualification+=Qualification*
		public Assignment getQualificationAssignment_11() { return cQualificationAssignment_11; }
		
		//Qualification
		public RuleCall getQualificationQualificationParserRuleCall_11_0() { return cQualificationQualificationParserRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class InteractionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Interaction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInteractionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cChoixDebutKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cChoixDebutAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cChoixDebutChoixParserRuleCall_3_0 = (RuleCall)cChoixDebutAssignment_3.eContents().get(0);
		private final Keyword cChoixInterKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cChoixInterAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cChoixInterChoixParserRuleCall_5_0 = (RuleCall)cChoixInterAssignment_5.eContents().get(0);
		private final Keyword cChoixFinKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cChoixFinAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cChoixFinChoixParserRuleCall_7_0 = (RuleCall)cChoixFinAssignment_7.eContents().get(0);
		private final Keyword cFinKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cConditionAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cConditionConditionParserRuleCall_9_0 = (RuleCall)cConditionAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Interaction: /* Exigence 28 OCL? */ 'interaction' '{' 'choixDebut' choixDebut=Choix /* Exigence 30 */ 'choixInter'
		//	choixInter+=Choix* /* Exigence 29 */ 'choixFin' choixFin=Choix /* Exigence 30 */ /* Exigence 31 OCL */ 'Fin'
		//	condition=Condition /* Exigence 34 OCL*/ '}';
		@Override public ParserRule getRule() { return rule; }
		
		///* Exigence 28 OCL? */ 'interaction' '{' 'choixDebut' choixDebut=Choix /* Exigence 30 */ 'choixInter' choixInter+=Choix*
		///* Exigence 29 */ 'choixFin' choixFin=Choix /* Exigence 30 */ /* Exigence 31 OCL */ 'Fin' condition=Condition
		///* Exigence 34 OCL*/ '}'
		public Group getGroup() { return cGroup; }
		
		///* Exigence 28 OCL? */ 'interaction'
		public Keyword getInteractionKeyword_0() { return cInteractionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'choixDebut'
		public Keyword getChoixDebutKeyword_2() { return cChoixDebutKeyword_2; }
		
		//choixDebut=Choix
		public Assignment getChoixDebutAssignment_3() { return cChoixDebutAssignment_3; }
		
		//Choix
		public RuleCall getChoixDebutChoixParserRuleCall_3_0() { return cChoixDebutChoixParserRuleCall_3_0; }
		
		///* Exigence 30 */ 'choixInter'
		public Keyword getChoixInterKeyword_4() { return cChoixInterKeyword_4; }
		
		//choixInter+=Choix*
		public Assignment getChoixInterAssignment_5() { return cChoixInterAssignment_5; }
		
		//Choix
		public RuleCall getChoixInterChoixParserRuleCall_5_0() { return cChoixInterChoixParserRuleCall_5_0; }
		
		///* Exigence 29 */ 'choixFin'
		public Keyword getChoixFinKeyword_6() { return cChoixFinKeyword_6; }
		
		//choixFin=Choix
		public Assignment getChoixFinAssignment_7() { return cChoixFinAssignment_7; }
		
		//Choix
		public RuleCall getChoixFinChoixParserRuleCall_7_0() { return cChoixFinChoixParserRuleCall_7_0; }
		
		///* Exigence 30 */ /* Exigence 31 OCL */ 'Fin'
		public Keyword getFinKeyword_8() { return cFinKeyword_8; }
		
		//condition=Condition
		public Assignment getConditionAssignment_9() { return cConditionAssignment_9; }
		
		//Condition
		public RuleCall getConditionConditionParserRuleCall_9_0() { return cConditionConditionParserRuleCall_9_0; }
		
		///* Exigence 34 OCL*/ '}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class ChoixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Choix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChoixKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cActionsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cActionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cActionsActionParserRuleCall_3_0 = (RuleCall)cActionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Choix:
		//	'choix' '{'
		//	'actions' actions+=Action* /* Exigence 31 ? */
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'choix' '{' 'actions' actions+=Action* /* Exigence 31 ? */ '}'
		public Group getGroup() { return cGroup; }
		
		//'choix'
		public Keyword getChoixKeyword_0() { return cChoixKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'actions'
		public Keyword getActionsKeyword_2() { return cActionsKeyword_2; }
		
		//actions+=Action*
		public Assignment getActionsAssignment_3() { return cActionsAssignment_3; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_3_0() { return cActionsActionParserRuleCall_3_0; }
		
		///* Exigence 31 ? */ '}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Type");
		private final Assignment cTexteAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTexteEStringParserRuleCall_0 = (RuleCall)cTexteAssignment.eContents().get(0);
		
		//Type:
		//	texte=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//texte=EString
		public Assignment getTexteAssignment() { return cTexteAssignment; }
		
		//EString
		public RuleCall getTexteEStringParserRuleCall_0() { return cTexteEStringParserRuleCall_0; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cObjetsConsommesKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cObjetsConsommesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cObjetsConsommesObjetParserRuleCall_2_1_0 = (RuleCall)cObjetsConsommesAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cObjetsProduitsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cObjetsProduitsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cObjetsProduitsObjetParserRuleCall_3_1_0 = (RuleCall)cObjetsProduitsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cConnaissanceProduitsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cConnaissanceProduitsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cConnaissanceProduitsConnaissanceParserRuleCall_4_1_0 = (RuleCall)cConnaissanceProduitsAssignment_4_1.eContents().get(0);
		private final Assignment cQualificationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cQualificationQualificationParserRuleCall_5_0 = (RuleCall)cQualificationAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Action: /* Exigence 32 */ 'action' '{' ('objetsConsommes' objetsConsommes+=Objet*)? ('objetsProduits'
		//	objetsProduits+=Objet*)? ('connaissanceProduits' connaissanceProduits+=Connaissance*)? /* Exigence 35 */
		//	qualification+=Qualification* /* Exigence 39 */ '}';
		@Override public ParserRule getRule() { return rule; }
		
		///* Exigence 32 */ 'action' '{' ('objetsConsommes' objetsConsommes+=Objet*)? ('objetsProduits' objetsProduits+=Objet*)?
		//('connaissanceProduits' connaissanceProduits+=Connaissance*)? /* Exigence 35 */ qualification+=Qualification*
		///* Exigence 39 */ '}'
		public Group getGroup() { return cGroup; }
		
		///* Exigence 32 */ 'action'
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('objetsConsommes' objetsConsommes+=Objet*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'objetsConsommes'
		public Keyword getObjetsConsommesKeyword_2_0() { return cObjetsConsommesKeyword_2_0; }
		
		//objetsConsommes+=Objet*
		public Assignment getObjetsConsommesAssignment_2_1() { return cObjetsConsommesAssignment_2_1; }
		
		//Objet
		public RuleCall getObjetsConsommesObjetParserRuleCall_2_1_0() { return cObjetsConsommesObjetParserRuleCall_2_1_0; }
		
		//('objetsProduits' objetsProduits+=Objet*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'objetsProduits'
		public Keyword getObjetsProduitsKeyword_3_0() { return cObjetsProduitsKeyword_3_0; }
		
		//objetsProduits+=Objet*
		public Assignment getObjetsProduitsAssignment_3_1() { return cObjetsProduitsAssignment_3_1; }
		
		//Objet
		public RuleCall getObjetsProduitsObjetParserRuleCall_3_1_0() { return cObjetsProduitsObjetParserRuleCall_3_1_0; }
		
		//('connaissanceProduits' connaissanceProduits+=Connaissance*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'connaissanceProduits'
		public Keyword getConnaissanceProduitsKeyword_4_0() { return cConnaissanceProduitsKeyword_4_0; }
		
		//connaissanceProduits+=Connaissance*
		public Assignment getConnaissanceProduitsAssignment_4_1() { return cConnaissanceProduitsAssignment_4_1; }
		
		//Connaissance
		public RuleCall getConnaissanceProduitsConnaissanceParserRuleCall_4_1_0() { return cConnaissanceProduitsConnaissanceParserRuleCall_4_1_0; }
		
		///* Exigence 35 */ qualification+=Qualification*
		public Assignment getQualificationAssignment_5() { return cQualificationAssignment_5; }
		
		//Qualification
		public RuleCall getQualificationQualificationParserRuleCall_5_0() { return cQualificationQualificationParserRuleCall_5_0; }
		
		///* Exigence 39 */ '}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class QualificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.Qualification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQualifKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTexteAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTexteEStringParserRuleCall_1_0 = (RuleCall)cTexteAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cConditionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConditionConditionParserRuleCall_3_0 = (RuleCall)cConditionAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Qualification:
		//	'qualif' texte=EString '{'
		//	condition=Condition
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'qualif' texte=EString '{' condition=Condition '}'
		public Group getGroup() { return cGroup; }
		
		//'qualif'
		public Keyword getQualifKeyword_0() { return cQualifKeyword_0; }
		
		//texte=EString
		public Assignment getTexteAssignment_1() { return cTexteAssignment_1; }
		
		//EString
		public RuleCall getTexteEStringParserRuleCall_1_0() { return cTexteEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//condition=Condition
		public Assignment getConditionAssignment_3() { return cConditionAssignment_3; }
		
		//Condition
		public RuleCall getConditionConditionParserRuleCall_3_0() { return cConditionConditionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	public class EtatVisibiliteElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.EtatVisibilite");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVisibleEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVisibleVisibleKeyword_0_0 = (Keyword)cVisibleEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNonvisibleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNonvisibleNonVisibleKeyword_1_0 = (Keyword)cNonvisibleEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EtatVisibilite:
		//	visible | nonvisible='non visible';
		public EnumRule getRule() { return rule; }
		
		//visible | nonvisible='non visible'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//visible
		public EnumLiteralDeclaration getVisibleEnumLiteralDeclaration_0() { return cVisibleEnumLiteralDeclaration_0; }
		
		//'visible'
		public Keyword getVisibleVisibleKeyword_0_0() { return cVisibleVisibleKeyword_0_0; }
		
		//nonvisible='non visible'
		public EnumLiteralDeclaration getNonvisibleEnumLiteralDeclaration_1() { return cNonvisibleEnumLiteralDeclaration_1; }
		
		//'non visible'
		public Keyword getNonvisibleNonVisibleKeyword_1_0() { return cNonvisibleNonVisibleKeyword_1_0; }
	}
	public class EtatObligationElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.EtatObligation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cObligatoireEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cObligatoireObligatoireKeyword_0_0 = (Keyword)cObligatoireEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNonobligatoireEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNonobligatoireNonObligatoireKeyword_1_0 = (Keyword)cNonobligatoireEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EtatObligation:
		//	obligatoire | nonobligatoire='non obligatoire';
		public EnumRule getRule() { return rule; }
		
		//obligatoire | nonobligatoire='non obligatoire'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//obligatoire
		public EnumLiteralDeclaration getObligatoireEnumLiteralDeclaration_0() { return cObligatoireEnumLiteralDeclaration_0; }
		
		//'obligatoire'
		public Keyword getObligatoireObligatoireKeyword_0_0() { return cObligatoireObligatoireKeyword_0_0; }
		
		//nonobligatoire='non obligatoire'
		public EnumLiteralDeclaration getNonobligatoireEnumLiteralDeclaration_1() { return cNonobligatoireEnumLiteralDeclaration_1; }
		
		//'non obligatoire'
		public Keyword getNonobligatoireNonObligatoireKeyword_1_0() { return cNonobligatoireNonObligatoireKeyword_1_0; }
	}
	public class EtatCheminElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.EtatChemin");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOuvertEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOuvertOuvertKeyword_0_0 = (Keyword)cOuvertEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFermeEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFermeFermeKeyword_1_0 = (Keyword)cFermeEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EtatChemin:
		//	ouvert | ferme;
		public EnumRule getRule() { return rule; }
		
		//ouvert | ferme
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ouvert
		public EnumLiteralDeclaration getOuvertEnumLiteralDeclaration_0() { return cOuvertEnumLiteralDeclaration_0; }
		
		//'ouvert'
		public Keyword getOuvertOuvertKeyword_0_0() { return cOuvertOuvertKeyword_0_0; }
		
		//ferme
		public EnumLiteralDeclaration getFermeEnumLiteralDeclaration_1() { return cFermeEnumLiteralDeclaration_1; }
		
		//'ferme'
		public Keyword getFermeFermeKeyword_1_0() { return cFermeFermeKeyword_1_0; }
	}
	public class EtatActiviteElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.n7.GAME.EtatActivite");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cActifEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cActifActifKeyword_0_0 = (Keyword)cActifEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cInactifEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cInactifInactifKeyword_1_0 = (Keyword)cInactifEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum EtatActivite returns Activite:
		//	actif | inactif;
		public EnumRule getRule() { return rule; }
		
		//actif | inactif
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//actif
		public EnumLiteralDeclaration getActifEnumLiteralDeclaration_0() { return cActifEnumLiteralDeclaration_0; }
		
		//'actif'
		public Keyword getActifActifKeyword_0_0() { return cActifActifKeyword_0_0; }
		
		//inactif
		public EnumLiteralDeclaration getInactifEnumLiteralDeclaration_1() { return cInactifEnumLiteralDeclaration_1; }
		
		//'inactif'
		public Keyword getInactifInactifKeyword_1_0() { return cInactifInactifKeyword_1_0; }
	}
	
	private final GameElements pGame;
	private final EStringElements pEString;
	private final ExplorateurElements pExplorateur;
	private final ObjetElements pObjet;
	private final ConnaissanceElements pConnaissance;
	private final LieuElements pLieu;
	private final TerritoireElements pTerritoire;
	private final ConditionElements pCondition;
	private final CheminElements pChemin;
	private final PersonneElements pPersonne;
	private final InteractionElements pInteraction;
	private final ChoixElements pChoix;
	private final TypeElements pType;
	private final ActionElements pAction;
	private final QualificationElements pQualification;
	private final EIntElements pEInt;
	private final EBooleanElements pEBoolean;
	private final EtatVisibiliteElements eEtatVisibilite;
	private final EtatObligationElements eEtatObligation;
	private final EtatCheminElements eEtatChemin;
	private final EtatActiviteElements eEtatActivite;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GAMEGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGame = new GameElements();
		this.pEString = new EStringElements();
		this.pExplorateur = new ExplorateurElements();
		this.pObjet = new ObjetElements();
		this.pConnaissance = new ConnaissanceElements();
		this.pLieu = new LieuElements();
		this.pTerritoire = new TerritoireElements();
		this.pCondition = new ConditionElements();
		this.pChemin = new CheminElements();
		this.pPersonne = new PersonneElements();
		this.pInteraction = new InteractionElements();
		this.pChoix = new ChoixElements();
		this.pType = new TypeElements();
		this.pAction = new ActionElements();
		this.pQualification = new QualificationElements();
		this.pEInt = new EIntElements();
		this.pEBoolean = new EBooleanElements();
		this.eEtatVisibilite = new EtatVisibiliteElements();
		this.eEtatObligation = new EtatObligationElements();
		this.eEtatChemin = new EtatCheminElements();
		this.eEtatActivite = new EtatActiviteElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.n7.GAME".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	///* Exigence 40 */ /* Exigence 41 */ /* Exigence 42 */ /* Exigence 43 */ Game:
	//	'game' name=ID '{'
	//	explorateur=Explorateur /* Exigence 1 */
	//	territoire=Territoire
	//	'}';
	public GameElements getGameAccess() {
		return pGame;
	}
	
	public ParserRule getGameRule() {
		return getGameAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Explorateur:
	//	'explorateur' name=ID '{'
	//	'objets' objets+=Objet* /* Exigence 3 */ /* Exigence 13 OCL */ /* Exigence 14 OCL */ /* Exigence 15 OCL */
	//	'connaisances' connaissances+=Connaissance* /* Exigence 3 */
	//	'lieuCourant' lieuCourant=[Lieu] /* Exigence 12 OCL */ /* Exigence 18 OCL */
	//	'lieuxExplores' lieuExplores+=[Lieu]*
	//	'limiteTaille' limite=EInt /* Exigence 6 */ /* OCL */
	//	'}';
	public ExplorateurElements getExplorateurAccess() {
		return pExplorateur;
	}
	
	public ParserRule getExplorateurRule() {
		return getExplorateurAccess().getRule();
	}
	
	//Objet:
	//	'objet' name=ID
	//	'initVal' initVal=EInt
	//	'taille' taille=EInt /* Exigence 3 */
	//	'etat' etat=EtatVisibilite ('obtention' condition=Condition)? /* Exigence 22 */
	//	qualification+=Qualification* /* Exigence 39 */;
	public ObjetElements getObjetAccess() {
		return pObjet;
	}
	
	public ParserRule getObjetRule() {
		return getObjetAccess().getRule();
	}
	
	//Connaissance:
	//	'connaissance' name=ID '{'
	//	qualification+=Qualification* ('obtention' condition=Condition)? /* Exigence 22 */
	//	'etat' etat=EtatVisibilite /* Exigence 9 */
	//	'}';
	public ConnaissanceElements getConnaissanceAccess() {
		return pConnaissance;
	}
	
	public ParserRule getConnaissanceRule() {
		return getConnaissanceAccess().getRule();
	}
	
	//Lieu: /* Exigence 7 */ /* Exigence 9 */ 'lieu' name=ID '{' 'personnes' personnes+=Personne* /* Exigence 24 OCL */
	//	'objets' objets+=Objet* 'connaissances' connaisances+=Connaissance* 'chemins' chemin+=Chemin* /* Exigence 16 */
	//	/* Exigence 17 OCL */ /* Exigence 19 OCL */ qualification+=Qualification* /* Exigence 39 */ '}';
	public LieuElements getLieuAccess() {
		return pLieu;
	}
	
	public ParserRule getLieuRule() {
		return getLieuAccess().getRule();
	}
	
	//Territoire:
	//	'territoire' '{'
	//	'depart' lieuDepart=Lieu /* Exigence 8 */
	//	'inter' lieux+=Lieu*
	//	'fins' lieuxFin+=Lieu* /* Exigence 8 */
	//	'chemins' chemins+=Chemin*
	//	'}';
	public TerritoireElements getTerritoireAccess() {
		return pTerritoire;
	}
	
	public ParserRule getTerritoireRule() {
		return getTerritoireAccess().getRule();
	}
	
	//Condition:
	//	'condition' val=EBoolean '{'
	//	'objetsTrue' objetsTrue+=[Objet]*
	//	'objetsFalse' objetsFalse+=[Objet]*
	//	'connaissanceTrue' connaissanceTrue+=[Connaissance]*
	//	'connaissanceFalse' connaissanceFalse+=[Connaissance]*
	//	'lieuExplores' lieuxExplores+=[Lieu]*
	//	'}';
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//Chemin:
	//	'etatChemin' etat=EtatChemin 'de' predecessor=[Lieu] 'a' successor=[Lieu] '{'
	//	'visible' conditionsVisible=Condition /* Exigence 11 */
	//	'ouverture' conditionsOuverture=Condition /* Exigence 10*/
	//	'obligation' conditionsObligation=Condition
	//	'objetsTransmis' objetsTransmis+=Objet* /* Exigence 20 */
	//	'prixObjets' prixObjets+=Objet* /* Exigence 21 */
	//	qualification+=Qualification* /* Exigence 39 */
	//	'}';
	public CheminElements getCheminAccess() {
		return pChemin;
	}
	
	public ParserRule getCheminRule() {
		return getCheminAccess().getRule();
	}
	
	//Personne:
	//	'personne' name=EString '{'
	//	'activite' activite=EtatActivite /* Exigence 9 */
	//	'visibilite' conditionsVisible=Condition /* Exigence 11 */
	//	'obligation' conditionsObligation=Condition /* Exigence 25 */ /* Exigence 26 OCL */
	//	'interaction' interaction=Interaction /* Exigence 27 OCL */
	//	qualification+=Qualification*
	//	'}';
	public PersonneElements getPersonneAccess() {
		return pPersonne;
	}
	
	public ParserRule getPersonneRule() {
		return getPersonneAccess().getRule();
	}
	
	//Interaction: /* Exigence 28 OCL? */ 'interaction' '{' 'choixDebut' choixDebut=Choix /* Exigence 30 */ 'choixInter'
	//	choixInter+=Choix* /* Exigence 29 */ 'choixFin' choixFin=Choix /* Exigence 30 */ /* Exigence 31 OCL */ 'Fin'
	//	condition=Condition /* Exigence 34 OCL*/ '}';
	public InteractionElements getInteractionAccess() {
		return pInteraction;
	}
	
	public ParserRule getInteractionRule() {
		return getInteractionAccess().getRule();
	}
	
	//Choix:
	//	'choix' '{'
	//	'actions' actions+=Action* /* Exigence 31 ? */
	//	'}';
	public ChoixElements getChoixAccess() {
		return pChoix;
	}
	
	public ParserRule getChoixRule() {
		return getChoixAccess().getRule();
	}
	
	//Type:
	//	texte=EString;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//Action: /* Exigence 32 */ 'action' '{' ('objetsConsommes' objetsConsommes+=Objet*)? ('objetsProduits'
	//	objetsProduits+=Objet*)? ('connaissanceProduits' connaissanceProduits+=Connaissance*)? /* Exigence 35 */
	//	qualification+=Qualification* /* Exigence 39 */ '}';
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//Qualification:
	//	'qualif' texte=EString '{'
	//	condition=Condition
	//	'}';
	public QualificationElements getQualificationAccess() {
		return pQualification;
	}
	
	public ParserRule getQualificationRule() {
		return getQualificationAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum EtatVisibilite:
	//	visible | nonvisible='non visible';
	public EtatVisibiliteElements getEtatVisibiliteAccess() {
		return eEtatVisibilite;
	}
	
	public EnumRule getEtatVisibiliteRule() {
		return getEtatVisibiliteAccess().getRule();
	}
	
	//enum EtatObligation:
	//	obligatoire | nonobligatoire='non obligatoire';
	public EtatObligationElements getEtatObligationAccess() {
		return eEtatObligation;
	}
	
	public EnumRule getEtatObligationRule() {
		return getEtatObligationAccess().getRule();
	}
	
	//enum EtatChemin:
	//	ouvert | ferme;
	public EtatCheminElements getEtatCheminAccess() {
		return eEtatChemin;
	}
	
	public EnumRule getEtatCheminRule() {
		return getEtatCheminAccess().getRule();
	}
	
	//enum EtatActivite returns Activite:
	//	actif | inactif;
	public EtatActiviteElements getEtatActiviteAccess() {
		return eEtatActivite;
	}
	
	public EnumRule getEtatActiviteRule() {
		return getEtatActiviteAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
